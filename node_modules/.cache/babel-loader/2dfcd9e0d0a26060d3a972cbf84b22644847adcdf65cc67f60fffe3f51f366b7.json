{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\QR code\\\\qr\\\\src\\\\components\\\\Qr_g.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeGenerator = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [qrCodeUrl, setQRCodeUrl] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const response = await axios.post('/generate_qr', {\n        url\n      });\n      // Assuming the response contains the URL of the generated QR code\n      setQRCodeUrl(response.data.qr_code_url);\n    } catch (error) {\n      console.error('Error generating QR code:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QR Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: url,\n          onChange: e => setUrl(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), qrCodeUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated QR Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: qrCodeUrl,\n        alt: \"Generated QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCodeGenerator, \"OkUmbMkTXhrhG0As3Bz4wLQcHDs=\");\n_c = QRCodeGenerator;\nexport default QRCodeGenerator;\nvar _c;\n$RefreshReg$(_c, \"QRCodeGenerator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","QRCodeGenerator","_s","url","setUrl","qrCodeUrl","setQRCodeUrl","handleSubmit","event","preventDefault","response","post","data","qr_code_url","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","src","alt","_c","$RefreshReg$"],"sources":["D:/Personal Projects/QR code/qr/src/components/Qr_g.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst QRCodeGenerator = () => {\r\n  const [url, setUrl] = useState('');\r\n  const [qrCodeUrl, setQRCodeUrl] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      const response = await axios.post('/generate_qr', { url });\r\n      // Assuming the response contains the URL of the generated QR code\r\n      setQRCodeUrl(response.data.qr_code_url);\r\n    } catch (error) {\r\n      console.error('Error generating QR code:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>QR Code Generator</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <label>\r\n          Enter URL:\r\n          <input\r\n            type=\"text\"\r\n            value={url}\r\n            onChange={(e) => setUrl(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Generate QR Code</button>\r\n      </form>\r\n      {qrCodeUrl && (\r\n        <div>\r\n          <h3>Generated QR Code:</h3>\r\n          <img src={qrCodeUrl} alt=\"Generated QR Code\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRCodeGenerator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,cAAc,EAAE;QAAER;MAAI,CAAC,CAAC;MAC1D;MACAG,YAAY,CAACI,QAAQ,CAACE,IAAI,CAACC,WAAW,CAAC;IACzC,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEd,OAAA;IAAAgB,QAAA,gBACEhB,OAAA;MAAAgB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BpB,OAAA;MAAMqB,QAAQ,EAAEd,YAAa;MAAAS,QAAA,gBAC3BhB,OAAA;QAAAgB,QAAA,GAAO,YAEL,eAAAhB,OAAA;UACEsB,IAAI,EAAC,MAAM;UACXC,KAAK,EAAEpB,GAAI;UACXqB,QAAQ,EAAGC,CAAC,IAAKrB,MAAM,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACxCI,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACRpB,OAAA;QAAQsB,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EACNf,SAAS,iBACRL,OAAA;MAAAgB,QAAA,gBACEhB,OAAA;QAAAgB,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BpB,OAAA;QAAK4B,GAAG,EAAEvB,SAAU;QAACwB,GAAG,EAAC;MAAmB;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5C,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAClB,EAAA,CAvCID,eAAe;AAAA6B,EAAA,GAAf7B,eAAe;AAyCrB,eAAeA,eAAe;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}