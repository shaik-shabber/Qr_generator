{"ast":null,"code":"var _jsxFileName = \"D:\\\\Personal Projects\\\\QR code\\\\qr\\\\src\\\\components\\\\Qr_g.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport \"./qr_g.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QRCodeGenerator = () => {\n  _s();\n  const [url, setUrl] = useState('');\n  const [qrCode, setQRCode] = useState('');\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      // Send POST request to Flask backend\n      const response = await axios.post('http://localhost:5000/generate_qr', {\n        url\n      }, {\n        responseType: 'arraybuffer' // Ensure response is treated as binary data\n      });\n\n      // Convert binary data to base64 string\n      const qrCodeBase64 = Buffer.from(response.data, 'binary').toString('base64');\n      const qrCodeSrc = `data:image/png;base64,${qrCodeBase64}`;\n\n      // Display the QR code image\n      setQRCode(qrCodeSrc);\n    } catch (error) {\n      console.error('Error generating QR code:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"qrcode-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"QR Code Generator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"qrcode-form\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Enter URL:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: url,\n          onChange: e => setUrl(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Generate QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), qrCode && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"qrcode-generated\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Generated QR Code:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: qrCode,\n        alt: \"Generated QR Code\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n_s(QRCodeGenerator, \"mkTJgQM/crHIf0+oatMEhUPjpLM=\");\n_c = QRCodeGenerator;\nexport default QRCodeGenerator;\nvar _c;\n$RefreshReg$(_c, \"QRCodeGenerator\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","QRCodeGenerator","_s","url","setUrl","qrCode","setQRCode","handleSubmit","event","preventDefault","response","post","responseType","qrCodeBase64","Buffer","from","data","toString","qrCodeSrc","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","e","target","required","src","alt","_c","$RefreshReg$"],"sources":["D:/Personal Projects/QR code/qr/src/components/Qr_g.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport \"./qr_g.css\"\r\nconst QRCodeGenerator = () => {\r\n  const [url, setUrl] = useState('');\r\n  const [qrCode, setQRCode] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n\r\n    try {\r\n      // Send POST request to Flask backend\r\n      const response = await axios.post('http://localhost:5000/generate_qr', { url }, {\r\n        responseType: 'arraybuffer',  // Ensure response is treated as binary data\r\n      });\r\n\r\n      // Convert binary data to base64 string\r\n      const qrCodeBase64 = Buffer.from(response.data, 'binary').toString('base64');\r\n      const qrCodeSrc = `data:image/png;base64,${qrCodeBase64}`;\r\n\r\n      // Display the QR code image\r\n      setQRCode(qrCodeSrc);\r\n    } catch (error) {\r\n      console.error('Error generating QR code:', error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"qrcode-container\">\r\n      <h2>QR Code Generator</h2>\r\n      <form className=\"qrcode-form\" onSubmit={handleSubmit}>\r\n        <label>\r\n          Enter URL:\r\n          <input\r\n            type=\"text\"\r\n            value={url}\r\n            onChange={(e) => setUrl(e.target.value)}\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\">Generate QR Code</button>\r\n      </form>\r\n      {qrCode && (\r\n        <div className=\"qrcode-generated\">\r\n          <h3>Generated QR Code:</h3>\r\n          <img src={qrCode} alt=\"Generated QR Code\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default QRCodeGenerator;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACnB,MAAMC,eAAe,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC5B,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,YAAY,GAAG,MAAOC,KAAK,IAAK;IACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;IAEtB,IAAI;MACF;MACA,MAAMC,QAAQ,GAAG,MAAMZ,KAAK,CAACa,IAAI,CAAC,mCAAmC,EAAE;QAAER;MAAI,CAAC,EAAE;QAC9ES,YAAY,EAAE,aAAa,CAAG;MAChC,CAAC,CAAC;;MAEF;MACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,IAAI,CAACL,QAAQ,CAACM,IAAI,EAAE,QAAQ,CAAC,CAACC,QAAQ,CAAC,QAAQ,CAAC;MAC5E,MAAMC,SAAS,GAAG,yBAAyBL,YAAY,EAAE;;MAEzD;MACAP,SAAS,CAACY,SAAS,CAAC;IACtB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;IACnD;EACF,CAAC;EAED,oBACEnB,OAAA;IAAKqB,SAAS,EAAC,kBAAkB;IAAAC,QAAA,gBAC/BtB,OAAA;MAAAsB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1B1B,OAAA;MAAMqB,SAAS,EAAC,aAAa;MAACM,QAAQ,EAAEpB,YAAa;MAAAe,QAAA,gBACnDtB,OAAA;QAAAsB,QAAA,GAAO,YAEL,eAAAtB,OAAA;UACE4B,IAAI,EAAC,MAAM;UACXC,KAAK,EAAE1B,GAAI;UACX2B,QAAQ,EAAGC,CAAC,IAAK3B,MAAM,CAAC2B,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;UACxCI,QAAQ;QAAA;UAAAV,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACT,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC,eACR1B,OAAA;QAAQ4B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3C,CAAC,EACNrB,MAAM,iBACLL,OAAA;MAAKqB,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC/BtB,OAAA;QAAAsB,QAAA,EAAI;MAAkB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3B1B,OAAA;QAAKkC,GAAG,EAAE7B,MAAO;QAAC8B,GAAG,EAAC;MAAmB;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACxB,EAAA,CA/CID,eAAe;AAAAmC,EAAA,GAAfnC,eAAe;AAiDrB,eAAeA,eAAe;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}